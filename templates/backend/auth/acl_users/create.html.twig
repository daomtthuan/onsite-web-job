{% extends "backend/layouts/layout.html.twig" %}

{% block title %}
Tài khoản người dùng
{% endblock %}

{% block headline %}
Tài khoản người dùng
{% endblock %}

{% block content %}
<div id="{{ el }}" data-user="{{ data }}">
  <b-form @submit="submit" method="post" enctype="multipart/form-data">
    <h6>Thông tin bắt buộc</h6>
    <b-row>
      <b-col lg="6">
        <b-form-group label="Tên đăng nhập" label-for="input-username" description="Tối tiểu 5 kí tự và không chứa kí tự đặc biệt (VD: dnpcuong)"
                      invalid-feedback="Tài khoản không hợp lệ" :state="state.username">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-user"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-username" name="username" v-model="form.username" :state="state.username"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Email" label-for="input-email" description="Email này dùng để kích hoạt tài khoản (VD: phucuong@ctu.edu.vn)"
                      invalid-feedback="Email không hợp lệ" :state="state.email">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-envelope"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-email" name="email" v-model="form.email" :state="state.email"></b-form-input>
          </b-input-group>
        </b-form-group>
      </b-col>

      <b-col lg="6">
        <b-form-group label="Họ" label-for="input-last_name" description="Phần tên họ bao gồm cả phần tên lót (VD: Dương Nguyễn Phú)"
                      invalid-feedback="Họ không hợp lệ" :state="state.last_name">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-user"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-last_name" name="last_name" v-model="form.last_name" :state="state.last_name"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Tên" label-for="input-first_name" description="Chỉ phần tên (VD: Cường)" invalid-feedback="Tên không hợp lệ"
                      :state="state.first_name">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-user"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-first_name" name="first_name" v-model="form.first_name" :state="state.first_name"></b-form-input>
          </b-input-group>
        </b-form-group>
      </b-col>
    </b-row>

    <h6>Thông tin không bắt buộc</h6>
    <b-row>
      <b-col lg="6">
        <b-form-group label="Ảnh đại diện" label-for="input-avatar" description="Tải ảnh đại diện, để trống với mặc định là ảnh đại hiện của hệ thống"
                      :state="valid.avatar">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-camera"></i>
              </b-input-group-text>
            </template>
            <b-form-file id="input-avatar" name="avatar" v-model="form.avatar" placeholder="Chọn hoặc kẻo thả ảnh vào đây..."
                         drop-placeholder="Thả ảnh vào đây..." :state="valid.avatar" accept="image/*"
                         :file-name-formatter="(files) => (files.length == 1 ? 'Đã chọn ảnh đại diện' : 'Chọn hoặc kẻo thả ảnh vào đây...')">
            </b-form-file>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Công việc" label-for="input-job_title" description="Vị trí công việc hiện tại (VD: Nhà phát triển)"
                      invalid-feedback="Công việc không hợp lệ" :state="state.job_title">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-briefcase"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-job_title" name="job_title" v-model="form.job_title" :state="state.job_title"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Bộ phận" label-for="input-department" description="Bộ phận nơi làm việc hiện tại (VD: CUSC Software)"
                      invalid-feedback="Bộ phận không hợp lệ" :state="state.department">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-building"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-department" name="department" v-model="form.department" :state="state.department"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Điện thoại" label-for="input-phone" description="Số điện thoại (VD 0915659223)" invalid-feedback="Số điện thoại không hợp lệ"
                      :state="state.phone">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-phone"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-phone" name="phone" v-model="form.phone" :state="state.phone"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Địa chỉ 1" label-for="input-address1" description="Địa chỉ nhà (VD: 130 Xô Viết Nghệ Tỉnh, Quận Ninh Kiều)"
                      invalid-feedback="Địa chỉ không hợp lệ" :state="state.address1">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-map-marker-alt"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-address1" name="address1" v-model="form.address1" :state="state.address1"></b-form-input>
          </b-input-group>
        </b-form-group>
      </b-col>

      <b-col lg="6">
        <b-form-group label="Địa chỉ 2" label-for="input-address2" description="Địa chỉ nhà khác hoặc nơi làm việc (VD: 130 Xô Viết Nghệ Tỉnh, Quận Ninh Kiều)"
                      invalid-feedback="Địa chỉ không hợp lệ" :state="state.address2">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-map-marker-alt"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-address2" name="address2" v-model="form.address2" :state="state.address2"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Thành phố" label-for="input-city" description="Thành phố hiện tại đang sống (VD: Cần Thơ)"
                      invalid-feedback="Thành phố không hợp lệ" :state="state.city">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-city"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-city" name="city" v-model="form.city" :state="state.city"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Bang" label-for="input-state" description="Bang hiện tại đang sống (VD: New York)" invalid-feedback="Bang không hợp lệ"
                      :state="state.state">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-city"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-state" name="state" v-model="form.state" :state="state.state"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Mã bưu điện" label-for="input-postal_code" description="Mã bưu điện tại nơi đang sống (VD: 64000)"
                      invalid-feedback="Mã bưu điện không hợp lệ" :state="state.postal_code">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-mail-bulk"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-postal_code" name="postal_code" v-model="form.postal_code" :state="state.postal_code"></b-form-input>
          </b-input-group>
        </b-form-group>

        <b-form-group label="Quốc gia" label-for="input-country" description="Quốc gia đang sống (VD: Vietnam)" invalid-feedback="Quốc gia không hợp lệ"
                      :state="state.country">
          <b-input-group>
            <template v-slot:prepend>
              <b-input-group-text class="group-icon">
                <i class="fas fa-flag"></i>
              </b-input-group-text>
            </template>
            <b-form-input id="input-country" name="country" v-model="form.country" :state="state.country"></b-form-input>
          </b-input-group>
        </b-form-group>
      </b-col>
    </b-row>

    <b-form-group class="text-center">
      <b-button type="submit" variant="primary" name="submit" :disabled="!valid">Tạo mới</b-button>
    </b-form-group>
  </b-form>
</div>
{% endblock %}

{% block customscripts %}
<script src="/node_modules/vue/dist/vue.min.js"></script>
<script src="/node_modules/bootstrap-vue/dist/bootstrap-vue.min.js"></script>
<script>
  new Vue({
    el: '#{{ el }}',
    delimiters: ['${', '}'],
    data() {
      return {
        form: {
          username: '',
          last_name: '',
          first_name: '',
          email: '',
          avatar: null,
          job_title: '',
          department: '',
          phone: '',
          address1: '',
          address2: '',
          city: '',
          state: '',
          postal_code: '',
          country: '',
        },
        state: {
          username: false,
          last_name: false,
          first_name: false,
          email: false,
          avatar: null,
          job_title: null,
          department: null,
          phone: null,
          address1: null,
          address2: null,
          city: null,
          state: null,
          postal_code: null,
          country: null,
        },
      }
    },
    beforeMount() {
      this.regex = JSON.parse(this.$el.attributes['data-user'].value);
      for (const key in this.regex) {
        this.regex[key].pattern = new RegExp(this.regex[key].pattern);
      }
    },
    mounted() {
    },
    methods: {
      submit(event) {
        if (!this.valid) {
          event.preventDefault();
          this.$bvToast.toast('Thông tin không hợp, vui lòng kiểm tra lại', {
            title: 'Tạo mới không thành công',
            variant: 'danger',
          })
        }
      },
    },
    computed: {
      valid() {
        for (const key in this.state) {
          if (this.state[key] === false) {
            return false;
          }
        }
        return true;
      },
    },
    watch: {
      'form.username'() {
        this.state.username = !(
          this.form.username.length < this.regex.username.min ||
          this.form.username.length > this.regex.username.max ||
          !this.regex.username.pattern.test(this.form.username)
        );
      },
      'form.last_name'() {
        this.state.last_name = !(
          this.form.last_name.length < this.regex.last_name.min ||
          this.form.last_name.length > this.regex.last_name.max ||
          !this.regex.last_name.pattern.test(this.form.last_name)
        );
      },
      'form.first_name'() {
        this.state.first_name = !(
          this.form.first_name.length < this.regex.first_name.min ||
          this.form.first_name.length > this.regex.first_name.max ||
          !this.regex.first_name.pattern.test(this.form.first_name)
        );
      },
      'form.email'() {
        this.state.email = !(
          this.form.email.length < this.regex.email.min ||
          this.form.email.length > this.regex.email.max ||
          !this.regex.email.pattern.test(this.form.email)
        );
      },
      'form.avatar'() {
        this.state.avatar = this.form.avatar != null ? true : null;
      },
      'form.job_title'() {
        this.state.job_title =
          this.form.job_title.length == 0 ? null : !(
            this.form.job_title.length < this.regex.job_title.min ||
            this.form.job_title.length > this.regex.job_title.max ||
            !this.regex.job_title.pattern.test(this.form.job_title)
          );
      },
      'form.department'() {
        this.state.department =
          this.form.department.length == 0 ? null : !(
            this.form.department.length < this.regex.department.min ||
            this.form.department.length > this.regex.department.max ||
            !this.regex.department.pattern.test(this.form.department)
          );
      },
      'form.phone'() {
        this.state.phone =
          this.form.phone.length == 0 ? null : !(
            this.form.phone.length < this.regex.phone.min ||
            this.form.phone.length > this.regex.phone.max ||
            !this.regex.phone.pattern.test(this.form.phone)
          );
      },
      'form.address1'() {
        this.state.address1 =
          this.form.address1.length == 0 ? null : !(
            this.form.address1.length < this.regex.address1.min ||
            this.form.address1.length > this.regex.address1.max ||
            !this.regex.address1.pattern.test(this.form.address1)
          );
      },
      'form.address2'() {
        this.state.address2 =
          this.form.address2.length == 0 ? null : !(
            this.form.address2.length < this.regex.address2.min ||
            this.form.address2.length > this.regex.address2.max ||
            !this.regex.address2.pattern.test(this.form.address2)
          );
      },
      'form.city'() {
        this.state.city =
          this.form.city.length == 0 ? null : !(
            this.form.city.length < this.regex.city.min ||
            this.form.city.length > this.regex.city.max ||
            !this.regex.city.pattern.test(this.form.city)
          );
      },
      'form.state'() {
        this.state.state =
          this.form.state.length == 0 ? null : !(
            this.form.state.length < this.regex.state.min ||
            this.form.state.length > this.regex.state.max ||
            !this.regex.state.pattern.test(this.form.state)
          );
      },
      'form.postal_code'() {
        this.state.postal_code =
          this.form.postal_code.length == 0 ? null : !(
            this.form.postal_code.length < this.regex.postal_code.min ||
            this.form.postal_code.length > this.regex.postal_code.max ||
            !this.regex.postal_code.pattern.test(this.form.postal_code)
          );
      },
      'form.country'() {
        this.state.country =
          this.form.country.length == 0 ? null : !(
            this.form.country.length < this.regex.country.min ||
            this.form.country.length > this.regex.country.max ||
            !this.regex.country.pattern.test(this.form.country)
          );
      },
    },
  });
</script>
{% endblock %}

{% block customstyles %}
<link rel="stylesheet" href="/node_modules/bootstrap-vue/dist/bootstrap-vue.min.css">
{% endblock %}